name: Automated Release

on:
  milestone:
    types: [closed]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      chartVersion:
        description: 'Chart Version'
        required: true
      preReleaseIdentifier:
        description: 'PreRelease Identifier, e.g., alpha1, rc1'
        required: true
        default: 'rc1'

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CHANGELOG: CHANGELOG.md
      RELEASE_NOTES_FILENAME: release_notes
      RELEASE_NOTES_FULLNAME: release_notes.md

    steps:
      - name: Get Version
        run: |
          EVENT_NAME="${{ github.event_name }}"
          case "$EVENT_NAME" in
            "milestone" )
              RELEASE_VERSION="${{ github.event.milestone.title }}"
              ;;
            "workflow_dispatch" )
              RELEASE_VERSION="${{ github.event.inputs.version }}-${{ github.event.inputs.preReleaseIdentifier }}"
              ;;
            *)
              echo "Unsupported event_name $EVENT_NAME"
              exit 1
            ;;
          esac

          [[ "$RELEASE_VERSION" =~ ([0-9]*\.[0-9]*)\.[0-9]* ]] || { echo "Invalid version ${RELEASE_VERSION}"; exit 1; }
          RELEASE_BRANCH="release/${BASH_REMATCH[1]}"
          RELEASE_TAG=v${RELEASE_VERSION}

          echo "RELEASE_BRANCH=${RELEASE_BRANCH}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2
          restore-keys: ${{ runner.os }}-m2

      - name: Create and Switch to Release Branch
        run: |
          if ! git ls-remote --exit-code --heads --quiet origin ${RELEASE_BRANCH}; then
            git checkout -b ${RELEASE_BRANCH}
            git push -u origin ${RELEASE_BRANCH}
          else
            git checkout ${RELEASE_BRANCH}
          fi

      - name: Get Chart Version from Workflow Dispatch Input
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          CHART_VERSION="${{ github.event.inputs.chartVersion }}-${{ github.event.inputs.preReleaseIdentifier}}"
          echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV

      - name: Get Chart Version from Release Branch
        if: ${{ github.event_name == 'milestone' }}
        run: |
          CHART_VERSION=$(sed -rn 's/<release\.chartVersion>([0-9.]*).*<\/release.chartVersion>/\1/p' pom.xml | xargs)
          echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV

      - name: Update Pom
        run: |
          sed -i -r -e 's/(<release\.version>).*(<\/release\.version>)/\1'${RELEASE_VERSION}'\2/g' \
            -e 's/(<release\.chartVersion>).*(<\/release\.chartVersion>)/\1'${CHART_VERSION}'\2/g' pom.xml

      - name: Maven Release
        run: ./mvnw clean package -N -P=release

      - name: Create Release Notes
        if: ${{ github.event_name == 'milestone' }}
        uses: Decathlon/release-notes-generator-action@v3.1.4
        env:
          FILENAME: ${{ env.RELEASE_NOTES_FILENAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Changelog
        if: ${{ github.event_name == 'milestone' }}
        run: |
          RELEASE_DATE=$(date +%Y-%m-%d)
          TMPFILE=$(mktemp --suffix .md)
          cp $CHANGELOG $TMPFILE
          echo -e "# ${RELEASE_DATE} ${RELEASE_VERSION}\n" > $CHANGELOG
          cat $RELEASE_NOTES_FULLNAME $TMPFILE >> $CHANGELOG
          rm -f $TMPFILE

      - name: Commit and Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Bump version to ${{ env.RELEASE_VERSION }}
          commit_options: '--no-verify --signoff'
          tagging_message: ${{ env.RELEASE_TAG }}

      - name: Reset Master to Release Branch
        run: |
          git checkout master
          git reset --hard ${RELEASE_BRANCH}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          body: ''
          branch: create-pull-request/${{ env.RELEASE_BRANCH }}
          delete-branch: true
          signoff: true
          title: Merge version bump for ${{ env.RELEASE_VERSION }}

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: ${{ env.RELEASE_NOTES_FULLNAME }}
          commit: ${{ env.RELEASE_BRANCH }}
          draft: ${{ github.event_name == 'milestone' }}
          name: ${{ env.RELEASE_TAG }}
          omitBody: ${{ github.event_name == 'workflow_dispatch' }}
          prerelease: ${{ github.event_name == 'workflow_dispatch' }}
          tag: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
